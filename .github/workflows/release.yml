name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Build binaries
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
            go build -o dist/coldwire-server-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/*

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: dist
      
      - name: Compute SHA256 checksums
        run: |
          echo "## Checksums" > dist/CHECKSUMS.md
          for f in dist/*; do
            sha256sum "$f" >> dist/CHECKSUMS.md
          done
          cat dist/CHECKSUMS.md

      - name: Extract latest changelog section
        id: changelog
        run: |
          latest_notes=$(awk '/^## \[v/{if (found) exit; found=1; next} found {print}' CHANGELOG.md)
          echo "LATEST_NOTES<<EOF" >> $GITHUB_ENV
          echo "$latest_notes" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Publish GitHub Release
        run: |
          gh release create "$GITHUB_REF_NAME" dist/* \
            --title "Release $GITHUB_REF_NAME" \
            --notes "$LATEST_NOTES"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
