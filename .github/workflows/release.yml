name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write  # required to create releases

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Build Linux binaries
        run: |
          make build CI=true BINARY_NAME=coldwire-server GOOS=linux GOARCH=${{ matrix.goarch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-linux-${{ matrix.goarch }}
          path: bin/*

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin/

      - name: Compute SHA256 checksums
        run: |
          echo "## Checksums" > bin/CHECKSUMS.md
          for f in bin/*; do
            [ -f "$f" ] || continue
            sha256sum "$f" >> bin/CHECKSUMS.md
          done
          cat bin/CHECKSUMS.md

      - name: Extract latest changelog section
        id: changelog
        run: |
          latest_notes=$(awk '/^## \[v/{if (found) exit; found=1; next} found {print}' CHANGELOG.md)
          echo "LATEST_NOTES<<EOF" >> $GITHUB_ENV
          echo "$latest_notes" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Publish GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: ${{ env.LATEST_NOTES }}
          draft: false
          prerelease: false

      - name: Upload release assets
        run: |
          for f in bin/*; do
            [ -f "$f" ] || continue
            gh release upload "${GITHUB_REF_NAME}" "$f" --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
